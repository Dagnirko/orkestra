---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: orchestration

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: orchestration
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: orchestration
roleRef:
  kind: ClusterRole
  name: orchestration
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: orchestration
    namespace: default

---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    failure-domain.beta.kubernetes.io/region: eu-west-1
    service: orchestration
  name: orchestration-nfs
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 100Gi
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: fs-50e52f99.efs.eu-west-1.amazonaws.com
    path: /

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: orchestration
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  selector:
    matchLabels:
      service: orchestration

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orchestration-master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: orchestration
    spec:
      serviceAccountName: orchestration
      containers:
        - name: orchestration
          image: registry.drivetribe.com/tools/orchestration:latest
          env:
            - name: ORCHESTRA_DATA
              value: /opt/docker/orchestra
            - name: ORCHESTRA_PORT
              value: "8080"
            - name: ORCHESTRA_GITHUB_PORT
              value: "8081"
            - name: ORCHESTRA_KUBE_URI
              value: https://kubernetes.default.svc.k8s-jenkins.drivetribe.com
            - name: ORCHESTRA_KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ORCHESTRA_KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GITHUB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: github
                  key: username
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: github
                  key: token
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: secret-access-key
            - name: ANSIBLE_VAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: ansible
                  key: vault-pass
            - name: AURORA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aurora
                  key: username
            - name: AURORA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aurora
                  key: password
            - name: KUBECONFIG
              value: /opt/docker/secrets/kube/config
          ports:
            - name: ui
              containerPort: 8080
          volumeMounts:
            - name: data
              mountPath: /opt/docker/orchestra
            - name: ansible-secrets
              mountPath: /opt/docker/secrets/ansible
              readOnly: true
            - name: ssh-secrets
              mountPath: /opt/docker/secrets/ssh
              readOnly: true
            - name: kube-secrets
              mountPath: /opt/docker/secrets/kube
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: orchestration
        - name: ansible-secrets
          secret:
            secretName: ansible
        - name: ssh-secrets
          secret:
            secretName: ssh
            defaultMode: 0600
        - name: kube-secrets
          secret:
            secretName: kube

---
apiVersion: v1
kind: Service
metadata:
  name: orchestration-ui
spec:
  type: LoadBalancer
  selector:
    app: orchestration
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: github-webhooks
      protocol: TCP
      port: 81
      targetPort: 8081